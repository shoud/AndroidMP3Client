// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `ICEserveurMP3.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Serveur;

public interface mp3Prx extends Ice.ObjectPrx
{
    public boolean supprimerMP3(String titre);

    public boolean supprimerMP3(String titre, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_supprimerMP3(String titre);

    public Ice.AsyncResult begin_supprimerMP3(String titre, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_supprimerMP3(String titre, Ice.Callback __cb);

    public Ice.AsyncResult begin_supprimerMP3(String titre, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_supprimerMP3(String titre, Callback_mp3_supprimerMP3 __cb);

    public Ice.AsyncResult begin_supprimerMP3(String titre, java.util.Map<String, String> __ctx, Callback_mp3_supprimerMP3 __cb);

    public boolean end_supprimerMP3(Ice.AsyncResult __result);

    public boolean rechercherMP3(String titre);

    public boolean rechercherMP3(String titre, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_rechercherMP3(String titre);

    public Ice.AsyncResult begin_rechercherMP3(String titre, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_rechercherMP3(String titre, Ice.Callback __cb);

    public Ice.AsyncResult begin_rechercherMP3(String titre, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_rechercherMP3(String titre, Callback_mp3_rechercherMP3 __cb);

    public Ice.AsyncResult begin_rechercherMP3(String titre, java.util.Map<String, String> __ctx, Callback_mp3_rechercherMP3 __cb);

    public boolean end_rechercherMP3(Ice.AsyncResult __result);

    public String jouerMP3(String titre);

    public String jouerMP3(String titre, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_jouerMP3(String titre);

    public Ice.AsyncResult begin_jouerMP3(String titre, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_jouerMP3(String titre, Ice.Callback __cb);

    public Ice.AsyncResult begin_jouerMP3(String titre, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_jouerMP3(String titre, Callback_mp3_jouerMP3 __cb);

    public Ice.AsyncResult begin_jouerMP3(String titre, java.util.Map<String, String> __ctx, Callback_mp3_jouerMP3 __cb);

    public String end_jouerMP3(Ice.AsyncResult __result);

    public String getToken();

    public String getToken(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getToken();

    public Ice.AsyncResult begin_getToken(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getToken(Ice.Callback __cb);

    public Ice.AsyncResult begin_getToken(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getToken(Callback_mp3_getToken __cb);

    public Ice.AsyncResult begin_getToken(java.util.Map<String, String> __ctx, Callback_mp3_getToken __cb);

    public String end_getToken(Ice.AsyncResult __result);

    public String getArtiste(String titre);

    public String getArtiste(String titre, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getArtiste(String titre);

    public Ice.AsyncResult begin_getArtiste(String titre, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getArtiste(String titre, Ice.Callback __cb);

    public Ice.AsyncResult begin_getArtiste(String titre, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getArtiste(String titre, Callback_mp3_getArtiste __cb);

    public Ice.AsyncResult begin_getArtiste(String titre, java.util.Map<String, String> __ctx, Callback_mp3_getArtiste __cb);

    public String end_getArtiste(Ice.AsyncResult __result);

    public String getAlbum(String nom);

    public String getAlbum(String nom, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAlbum(String nom);

    public Ice.AsyncResult begin_getAlbum(String nom, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getAlbum(String nom, Ice.Callback __cb);

    public Ice.AsyncResult begin_getAlbum(String nom, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getAlbum(String nom, Callback_mp3_getAlbum __cb);

    public Ice.AsyncResult begin_getAlbum(String nom, java.util.Map<String, String> __ctx, Callback_mp3_getAlbum __cb);

    public String end_getAlbum(Ice.AsyncResult __result);

    public String getCompo(String nom);

    public String getCompo(String nom, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getCompo(String nom);

    public Ice.AsyncResult begin_getCompo(String nom, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getCompo(String nom, Ice.Callback __cb);

    public Ice.AsyncResult begin_getCompo(String nom, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getCompo(String nom, Callback_mp3_getCompo __cb);

    public Ice.AsyncResult begin_getCompo(String nom, java.util.Map<String, String> __ctx, Callback_mp3_getCompo __cb);

    public String end_getCompo(Ice.AsyncResult __result);

    public void play();

    public void play(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_play();

    public Ice.AsyncResult begin_play(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_play(Ice.Callback __cb);

    public Ice.AsyncResult begin_play(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_play(Callback_mp3_play __cb);

    public Ice.AsyncResult begin_play(java.util.Map<String, String> __ctx, Callback_mp3_play __cb);

    public void end_play(Ice.AsyncResult __result);

    public void stop();

    public void stop(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stop();

    public Ice.AsyncResult begin_stop(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_stop(Ice.Callback __cb);

    public Ice.AsyncResult begin_stop(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_stop(Callback_mp3_stop __cb);

    public Ice.AsyncResult begin_stop(java.util.Map<String, String> __ctx, Callback_mp3_stop __cb);

    public void end_stop(Ice.AsyncResult __result);

    public void envoyerMusique(String titre, String artiste, String album, String compo, byte[] musique);

    public void envoyerMusique(String titre, String artiste, String album, String compo, byte[] musique, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_envoyerMusique(String titre, String artiste, String album, String compo, byte[] musique);

    public Ice.AsyncResult begin_envoyerMusique(String titre, String artiste, String album, String compo, byte[] musique, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_envoyerMusique(String titre, String artiste, String album, String compo, byte[] musique, Ice.Callback __cb);

    public Ice.AsyncResult begin_envoyerMusique(String titre, String artiste, String album, String compo, byte[] musique, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_envoyerMusique(String titre, String artiste, String album, String compo, byte[] musique, Callback_mp3_envoyerMusique __cb);

    public Ice.AsyncResult begin_envoyerMusique(String titre, String artiste, String album, String compo, byte[] musique, java.util.Map<String, String> __ctx, Callback_mp3_envoyerMusique __cb);

    public void end_envoyerMusique(Ice.AsyncResult __result);

    public String[] listerMP3();

    public String[] listerMP3(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_listerMP3();

    public Ice.AsyncResult begin_listerMP3(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_listerMP3(Ice.Callback __cb);

    public Ice.AsyncResult begin_listerMP3(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_listerMP3(Callback_mp3_listerMP3 __cb);

    public Ice.AsyncResult begin_listerMP3(java.util.Map<String, String> __ctx, Callback_mp3_listerMP3 __cb);

    public String[] end_listerMP3(Ice.AsyncResult __result);
}
